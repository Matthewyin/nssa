# Cloudflare Workers 配置文件 - NSSA 管理后台
name = "nssa-admin"
compatibility_date = "2024-01-01"
compatibility_flags = ["nodejs_compat"]

# 主入口文件 (需要构建后生成)
main = "dist/worker.js"

# 环境配置
[env.production]
name = "nssa-admin-prod"

[env.staging]
name = "nssa-admin-staging"

# 环境变量 (敏感信息通过 wrangler secret 设置)
[vars]
NODE_ENV = "production"
NEXT_PUBLIC_API_URL = "https://admin.nssa.io"
GITHUB_OWNER = "Matthewyin"
GITHUB_REPO = "nssa"
GITHUB_BRANCH = "main"

# 生产环境变量
[env.production.vars]
NODE_ENV = "production"
NEXT_PUBLIC_API_URL = "https://admin.nssa.io"

# 测试环境变量
[env.staging.vars]
NODE_ENV = "staging"
NEXT_PUBLIC_API_URL = "https://admin-staging.nssa.io"

# KV 存储 - 用于缓存和会话管理 (可选，暂时注释掉)
# [[kv_namespaces]]
# binding = "ADMIN_CACHE"
# id = "admin-cache-kv-id"
# preview_id = "admin-cache-kv-preview-id"

# [[kv_namespaces]]
# binding = "ADMIN_SESSIONS"
# id = "admin-sessions-kv-id"
# preview_id = "admin-sessions-kv-preview-id"

# R2 存储 - 用于媒体文件上传 (可选，暂时注释掉)
# [[r2_buckets]]
# binding = "ADMIN_MEDIA"
# bucket_name = "nssa-admin-media"

# 自定义域名路由
[[env.production.routes]]
pattern = "admin.nssa.io/*"
zone_name = "nssa.io"

[[env.staging.routes]]
pattern = "admin-staging.nssa.io/*"
zone_name = "nssa.io"

# 构建配置
[build]
command = "npm run build:worker"
cwd = "."

# 定时任务 - 用于清理和维护
[triggers]
crons = [
  "0 2 * * *",  # 每日凌晨2点清理缓存
  "0 0 * * 0"   # 每周日清理日志
]

# 资源限制
[limits]
cpu_ms = 30000  # 30秒 CPU 时间限制

# 开发环境配置
[env.development]
name = "nssa-admin-dev"
vars = { NODE_ENV = "development" }

{
  "nodes": [
    {
      "parameters": {
        "url": "={{$json.queryUrl}}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "options": {}
      },
      "id": "d1537216-42c2-4733-b9b3-33936e6d67e5",
      "name": "扫描文件夹文档",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3100,
        2900
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JUnWEOwe7cbBmf5L",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 处理所有文档数据，合并文件夹信息\nconst allResults = $input.all();\nlet allDocuments = [];\n\n// 文件夹映射\nconst folderMap = {\n  '1xDNGIOGnsCsXs0KZCHwKOav96dQGith4': { name: '心理专题', category: 'psychology' },\n  '1uKz9AOYftgvExoLPbiMvlEtdjY63YSB6': { name: '职场专题', category: 'workplace' },\n  '125UBg7dLONmNg0ou9T4d8uVW_fsrJFH8': { name: '历史专题', category: 'history' },\n  '1frvBLCJkyDaBffF_JXR4Px8DoIcL-75_': { name: '技术专题', category: 'tech' }\n};\n\n// 遍历每个文件夹的结果\nallResults.forEach(result => {\n  if (result.json.files && result.json.files.length > 0) {\n    result.json.files.forEach(file => {\n      const folderId = file.parents[0];\n      const folderInfo = folderMap[folderId];\n      \n      if (folderInfo) {\n        allDocuments.push({\n          json: {\n            ...file,\n            folderName: folderInfo.name,\n            folderId: folderId,\n            category: folderInfo.category\n          }\n        });\n      }\n    });\n  }\n});\n\nconsole.log(`总共找到 ${allDocuments.length} 个文档`);\nreturn allDocuments;"
      },
      "id": "054c65d8-e45a-4ea8-8d1e-b0873648e337",
      "name": "处理文档数据",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3340,
        2920
      ]
    },
    {
      "parameters": {
        "jsCode": "// 解析AI Agent的响应\nconst response = $input.first();\nconst aiResponse = response.json.output;\nconst originalDoc = $('Loop Over Items').first().json;\n\nlet frontMatter = aiResponse;\n\n// 直接使用文档ID的后8位作为文件名\nconst docId = originalDoc.id;\nconst shortId = docId.slice(-8);\nconst fileName = $('判断文件状态').first().json.category + `-${shortId}.md`;\n\n// 构建完整的Front Matter\nconst now = new Date();\nconst completeFrontMatter = {\n  ...frontMatter,\n  date: now.toISOString(),\n  lastmod: now.toISOString(),\n  categories: [originalDoc.folderName]\n};\n\nreturn {\n  json: {\n    originalDoc,\n    frontMatter: completeFrontMatter,\n    fileName,\n    category: originalDoc.category\n  }\n};"
      },
      "id": "4dbebaf1-9dd9-48d6-b521-655e8534d64b",
      "name": "处理AI响应",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5180,
        2440
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3620,
        2780
      ],
      "id": "d2220184-8c6c-418e-a884-c8e92a81b769",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=请分析这个Google文档并返回Hugo格式的Front Matter。\n\n文档信息：\n- URL: {{$json.webViewLink}}\n- 标题: {{$json.name}}\n- 分类: {{$json.folderName}}\n\n分析要求：\n1. 仔细阅读文档内容\n2. 提取核心主题和关键信息\n3. 生成适合的标签和描述\n\n返回JSON格式：\n{\n  \"title\": \"优化后的文章标题\",\n  \"subtitle\": \"简洁的副标题\",\n  \"description\": \"100-200字的文章描述，突出核心价值\",\n  \"tags\": [\"相关标签1\", \"相关标签2\", \"相关标签3\"],\n  \"readingTime\": \"约XX分钟\"\n}\n\n注意：只返回JSON，不要包含其他解释文字。",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        4780,
        2440
      ],
      "id": "7eab3bfa-9e68-4d33-94b3-be72aebfb09e",
      "name": "AI Agent",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"title\": \"优化后的文章标题\",\n  \"subtitle\": \"简洁的副标题\",\n  \"description\": \"100-200字的文章描述，突出核心价值\",\n  \"tags\": [\"相关标签1\", \"相关标签2\", \"相关标签3\"],\n  \"readingTime\": \"约XX分钟\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        4980,
        2700
      ],
      "id": "cb9cf84a-4328-487c-bd8c-b12bd235fa4f",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        4780,
        2700
      ],
      "id": "ad30c4ad-b1d5-4bac-80c7-6e2b58020a04",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "itRdUUPXbeECwMa9",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://www.googleapis.com/drive/v3/files/{{$json.id}}/export?mimeType=text/markdown",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "options": {}
      },
      "id": "3adeac38-0899-4899-a750-b5db512a3cc5",
      "name": "下载Markdown内容",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4960,
        2980
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JUnWEOwe7cbBmf5L",
          "name": "Google Drive account"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "d8c2eb07-291c-4307-a3af-9208242a67ba",
      "name": "合并AI和内容",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        5400,
        2620
      ],
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// 合并AI生成的Front Matter和Markdown内容\nconst aiData = $input.first().json;\nconst markdownData = $input.last().json;\n\n// 获取Front Matter数据\nconst fm = aiData.frontMatter;\n\n// 手动构建简单的YAML Front Matter\nconst frontMatterYaml = `title: \"${fm.title || ''}\"\nsubtitle: \"${fm.subtitle || ''}\"\ndescription: \"${fm.description || ''}\"\ntags: [${fm.tags ? fm.tags.map(tag => `\"${tag}\"`).join(', ') : ''}]\nreadingTime: \"${fm.readingTime || ''}\"\ndate: \"${fm.date || ''}\"\nlastmod: \"${fm.lastmod || ''}\"\ncategories: [${fm.categories ? fm.categories.map(cat => `\"${cat}\"`).join(', ') : ''}]`;\n\n// 获取Markdown内容\nconst content = markdownData.data || markdownData.body || '';\n\n// 合并Front Matter和内容\nconst completeDocument = `---\n${frontMatterYaml}\n---\n\n${content}`;\n\n// 确定文件路径\nconst filePath = `/Users/matthewyin/Coding/nssa/content/${aiData.category}/`;\n\n// 确定文件名\nconst fileName = $input.first().json.fileName\n\n// 将文本内容转换为二进制数据\nconst binaryData = Buffer.from(completeDocument, 'utf8');\n\nreturn {\n  json: {\n    filePath,\n    fileName,\n    category: aiData.category,\n    title: aiData.frontMatter.title,\n    originalDoc: aiData.originalDoc,\n    success: true\n  },\n  binary: {\n    data: binaryData\n  }\n};"
      },
      "id": "b334e347-e28d-4206-8e32-2f2fb64aacf7",
      "name": "合并内容",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5600,
        2620
      ]
    },
    {
      "parameters": {},
      "id": "4bf5399f-785e-4071-be3a-6b8f6359ec87",
      "name": "手动触发器",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        2320,
        3060
      ]
    },
    {
      "parameters": {
        "jsCode": "// 处理子文件夹数据，为每个文件夹创建查询\nconst response = $input.first().json;\n\nif (!response.files || response.files.length === 0) {\n  console.log('没有找到子文件夹');\n  return [];\n}\n\nconsole.log(`找到 ${response.files.length} 个子文件夹`);\n\n// 为每个文件夹创建独立的查询任务\nreturn response.files.map(folder => ({\n  json: {\n    folderId: folder.id,\n    folderName: folder.name,\n    queryUrl: `https://www.googleapis.com/drive/v3/files?q='${folder.id}' in parents and mimeType='application/vnd.google-apps.document'&fields=files(id,name,mimeType,modifiedTime,parents,webViewLink)`\n  }\n}));"
      },
      "id": "1e5901f0-a917-4e4f-8029-8dab8d118296",
      "name": "处理文件夹数据2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2900,
        2900
      ]
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/drive/v3/files",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleDriveOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "'1BuWi03gZ8GwndFjz2LdhQglGMjW80VMY' in parents and mimeType='application/vnd.google-apps.folder'"
            },
            {
              "name": "fields",
              "value": "files(id,name)"
            }
          ]
        },
        "options": {}
      },
      "id": "969562c0-641d-4141-a08a-89e539c209e5",
      "name": "获取子文件夹1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2680,
        2900
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JUnWEOwe7cbBmf5L",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "resource": "file",
        "path": "={{ $json.filePath }}",
        "options": {
          "fileName": "={{ $json.fileName }}"
        }
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        5820,
        2620
      ],
      "id": "196812a7-eb04-4d07-9b0f-9d33ef770cf3",
      "name": "保存合并后的文件到本地",
      "credentials": {
        "sshPrivateKey": {
          "id": "N6eECZU7wEyeaTWT",
          "name": "SSH Password account 2"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "pwd && /opt/homebrew/bin/hugo --minify --gc",
        "cwd": "=Coding/nssa"
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        6160,
        3040
      ],
      "id": "78a0791f-0e5c-40e3-81fc-1fd35b1d238f",
      "name": "执行Hugo",
      "credentials": {
        "sshPrivateKey": {
          "id": "N6eECZU7wEyeaTWT",
          "name": "SSH Password account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "be2bdc3d-dd1c-47f1-817f-feaa003c9323",
              "leftValue": "={{ $json.skipProcessing }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        4380,
        2780
      ],
      "id": "19585f0a-e3c5-4def-bf87-5327ec5065af",
      "name": "If"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "=pwd && test -f \"/Users/matthewyin/Coding/nssa/content/{{ $json.category }}/{{ $json.category  +  `-` + $json.id.slice(-8) }}.md\" && echo 'EXISTS' || echo 'NOT_EXISTS'",
        "cwd": "=/"
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3920,
        2780
      ],
      "id": "bb449928-65ca-4bc2-b3ec-f9ec296ec979",
      "name": "检查文件是否存在",
      "credentials": {
        "sshPrivateKey": {
          "id": "N6eECZU7wEyeaTWT",
          "name": "SSH Password account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 检查文件是否存在\nconst checkResult = $input.first();\nconst originalDoc = $('Loop Over Items').first().json;\n\n// 获取SSH命令的输出\nconst output = checkResult.json.stdout.trim();\n\n\nif (output.split('\\n')[1] === 'EXISTS') {\n  // 文件已存在，跳过处理\n  return {\n    json: \n            {  ...originalDoc, \n                 fileExists: false,\n                 skipProcessing: false,\n                 message: `文件已存在，跳过处理: ${originalDoc.name}`\n            }\n         };\n}\nelse {\n  // 文件不存在，需要处理\n  return {\n    json: {\n      ...originalDoc,\n      fileExists: true,\n      skipProcessing: true,\n      message: `文件不存在，开始处理: ${originalDoc.name}`\n    }\n  };\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4160,
        2780
      ],
      "id": "f2f9b985-a786-476f-a3cd-2130bb1cd1d8",
      "name": "判断文件状态"
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "git add . && (git diff-index --quiet HEAD -- || (git commit -m \"自动发布：批量更新文档\" && git push))",
        "cwd": "=Coding/nssa"
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3940,
        2340
      ],
      "id": "b3908a6a-32f4-45f2-a72d-3753b4a515a0",
      "name": "更新至GitHub",
      "executeOnce": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "N6eECZU7wEyeaTWT",
          "name": "SSH Password account 2"
        }
      }
    },
    {
      "parameters": {
        "authentication": "privateKey",
        "command": "export PATH=$PATH:/opt/homebrew/bin && /opt/homebrew/bin/npx wrangler deploy",
        "cwd": "=Coding/nssa"
      },
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        3940,
        2540
      ],
      "id": "979a94f5-982a-43b8-8541-32bf3005d1b9",
      "name": "部署到Cloudflare",
      "executeOnce": true,
      "credentials": {
        "sshPrivateKey": {
          "id": "N6eECZU7wEyeaTWT",
          "name": "SSH Password account 2"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "mode": "id",
          "value": "1BuWi03gZ8GwndFjz2LdhQglGMjW80VMY"
        },
        "event": "folderUpdated"
      },
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        2500,
        2900
      ],
      "id": "c2335974-6038-4e96-9fcc-bf667cd7f092",
      "name": "Google Drive Trigger",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "JUnWEOwe7cbBmf5L",
          "name": "Google Drive account"
        }
      }
    }
  ],
  "connections": {
    "扫描文件夹文档": {
      "main": [
        [
          {
            "node": "处理文档数据",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "处理文档数据": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "处理AI响应": {
      "main": [
        [
          {
            "node": "合并AI和内容",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "更新至GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "部署到Cloudflare",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "检查文件是否存在",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "处理AI响应",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "下载Markdown内容": {
      "main": [
        [
          {
            "node": "合并AI和内容",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "合并AI和内容": {
      "main": [
        [
          {
            "node": "合并内容",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "合并内容": {
      "main": [
        [
          {
            "node": "保存合并后的文件到本地",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "手动触发器": {
      "main": [
        [
          {
            "node": "获取子文件夹1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "处理文件夹数据2": {
      "main": [
        [
          {
            "node": "扫描文件夹文档",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "获取子文件夹1": {
      "main": [
        [
          {
            "node": "处理文件夹数据2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "保存合并后的文件到本地": {
      "main": [
        [
          {
            "node": "执行Hugo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "执行Hugo": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "下载Markdown内容",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "检查文件是否存在": {
      "main": [
        [
          {
            "node": "判断文件状态",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "判断文件状态": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "更新至GitHub": {
      "main": [
        []
      ]
    },
    "Google Drive Trigger": {
      "main": [
        []
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ea27eea5943ea997fc6bfde06792d1e57f992a703d9ffee127ac850cbaaf6839"
  }
}
# 简化nginx配置 - Firebase App Hosting
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志配置
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" rt=$request_time';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 基础性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;

    # 缓冲区优化
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Gzip压缩配置
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        image/svg+xml
        application/atom+xml;

    # 主服务器配置
    server {
        listen 8080 default_server;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # 健康检查端点（Firebase App Hosting要求）
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # 静态资源缓存优化
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
            
            # 跨域支持（如果需要）
            add_header Access-Control-Allow-Origin *;
            
            # 预压缩文件支持
            gzip_static on;
        }

        # HTML文件缓存策略
        location ~* \.html$ {
            expires 5m;
            add_header Cache-Control "public, must-revalidate";
            
            # 安全头配置
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Referrer-Policy strict-origin-when-cross-origin;
        }

        # Sitemap和RSS文件
        location ~* \.(xml)$ {
            expires 1h;
            add_header Content-Type application/xml;
            add_header Cache-Control "public, must-revalidate";
        }

        # API路由处理（如果有）
        location /api/ {
            try_files $uri $uri.json =404;
            add_header Content-Type application/json;
        }

        # 主路由处理 - SPA支持
        location / {
            try_files $uri $uri/ $uri.html /index.html;
            
            # 基础安全头
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Referrer-Policy strict-origin-when-cross-origin;
            
            # 预加载关键资源
            add_header Link "</favicon.svg>; rel=preload; as=image" always;
        }

        # 404错误处理
        error_page 404 /404.html;
        location = /404.html {
            internal;
        }

        # 50x错误处理
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            internal;
        }
    }
}

name: Deploy to Cloudflare Workers

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy NSSA to Cloudflare Workers

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build CSS
      run: |
        echo "Building Tailwind CSS..."
        npm run css:build
        echo "CSS build completed"
        ls -la static/css/

    - name: Build Hugo site
      run: |
        echo "Building Hugo site..."
        npx hugo --minify --gc
        echo "Hugo build completed"

    - name: Verify build output
      run: |
        echo "Checking public directory:"
        ls -la public/
        echo "Checking CSS file:"
        ls -la public/css/
        echo "Verifying CSS contains responsive grid classes:"
        grep -c "grid-cols-2" public/css/main.css || echo "grid-cols-2 not found"
        grep -c "md:grid-cols-4" public/css/main.css || echo "md:grid-cols-4 not found"
        grep -c "lg:grid-cols-3" public/css/main.css || echo "lg:grid-cols-3 not found"
        echo "Build completed successfully"

    - name: Check wrangler configuration
      run: |
        echo "Checking wrangler.toml:"
        cat wrangler.toml
        echo "Checking workers-site/index.js exists:"
        ls -la workers-site/index.js
        echo "Checking wrangler version:"
        npx wrangler --version

    - name: Test wrangler authentication
      run: npx wrangler whoami
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    - name: Deploy to Cloudflare Workers
      run: npx wrangler deploy
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}


